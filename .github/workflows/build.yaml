name: Secure Pipeline Demo - Java

on:
 push:
    branches: [ main ]
 pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build & Unit Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11 (LTS)
      uses: actions/setup-java@v1
      with:
        java-version: 11
        architecture: x64
    - name: Restore Maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - run: java --version && mvn --version
    - name: Build project with Maven
      run: mvn -B clean package
    - name: Publish Artefact
      uses: actions/upload-artifact@v1
      with:
        name: Application Jar
        path: target/demo-0.0.1-SNAPSHOT.jar
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        pull: true
        push: true
        tags: ghcr.io/${{ github.repository }}/app:latest
    - run: echo ${{ steps.docker_build.outputs.digest }}

  oss-scan:
    name: OSS Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/maven-3-jdk-11@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
  sast:
    name: Static Code Analysis with FindSecBugs
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up JDK 11 (LTS)
      uses: actions/setup-java@v1
      with:
        java-version: 11
        architecture: x64
    - name: Restore Maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Run Spot Bugs
      continue-on-error: true
      run: mvn compile spotbugs:check
    - uses: jwgmeligmeyling/spotbugs-github-action@master
      with:
        path: '**/spotbugsXml.xml'
  container:
    name: Scan Container Image
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: anchore/scan-action@v2
      id: scan
      with:
        image: ghcr.io/${{ github.repository }}/app:latest
        acs-report-enable: true
        fail-build: true
        severity-cutoff: critical
    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
  container-lint:
    name: Run Dockle
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: hands-lab/dockle-action@v1
      with:
        image: ghcr.io/${{ github.repository }}/app:latest
        exit-code: '1'
        exit-level: FATAL
  k8s-lint:
    name: Run KubeSec
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Run kubesec scanner
        uses: controlplaneio/kubesec-action@v0.0.2
        with:
          input: pod.yaml
          exit-code: "0"
  license_check:
    name: Run License Check
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout the code
      uses: actions/checkout@master
    - name: Set up JDK 11 (LTS)
      uses: actions/setup-java@v1
      with:
        java-version: 11
        architecture: x64
    - name: Restore Maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.2
        bundler-cache: false
    - run: gem install license_finder
    - run: license_finder